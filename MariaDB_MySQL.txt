conectar ao google cloud plataform =>  ssh cleyton@34.95.239.242

para desconectar => exit

**********************************************************************************************************
**********************************************************************************************************
# REMOVE VERSÕES ANTERIORES DO DOCKER
sudo apt-get remove \
    docker \
    docker-engine \
    docker.io \
    containerd runc -y

sudo apt update

# INSTALA O DOCKER-CE
sudo apt install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common -y

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable" -y

sudo apt update

sudo apt install docker-ce docker-ce-cli containerd.io -y

#### CRIANDO O CONTAINER DO MARIADB
sudo docker run --restart always -d --name bdmariadb1 -p 3306:3306 \
    -e MYSQL_ROOT_PASSWORD=Cleyton2022+CB mariadb


    sudo docker ps - lista os processos ativos





### INSTALAR O MYSQL WORKBENCH E INSOMNIA

# LINUX (UBUNTU)
sudo apt install mysql-workbench
sudo snap install insomnia

# FAÇA O DOWNLOAD PARA WINDOWS
https://dev.mysql.com/downloads/workbench/
https://insomnia.rest/download/


COMANDOS CONTAINER DOCKER

sudo docker stop bdmariadb1
sudo docker start bdmariadb1
sudo docker restart bdmariadb1


DICA

ctrl + shift + P
> change language
> javascript

sudo apt install -f => Corrige todas as dependencias faltantes do sistema

### CRIANDO A MIGRATION

npm i -D sequelize-cli
npm i sequelize mariadb

npx sequelize migration:create --name=alunos

### REALIZAR A MIGRATION PARA O BANCO DE DADOS

npx sequelize db:migrate

### PARA DESFAZER A MIGRATION

npx sequelize-cli db:migrate:undo
*************************    USANDO SEEDERS         ***********************************

npx sequelize-cli seed:generate --name default-settings

Para executar uma seed

npx sequelize-cli db:seed:all

***************************************************************************************

npx sequelize-cli db:migrate

se der erro que o banco não existe =>

npx sequelize db:create

                                                ***************  UTILIZANDO O LAMP  ********************

Verificar se os serviços estão ativos =>   service mysql status

1. Criar um usuário para se logar =>
	1.1 Digite sudo mysql
	1.2 Digite sua senha
	1.3 Digite o comando de criação => CREATE USER 'nome_de_usuario'@'localhost' IDENTIFIED BY 'minha_senha';
	1.4 Dê todos os privilegios de root ao usuário => GRANT ALL PRIVILEGES ON *.* TO 'nome_de_usuario'@'localhost' WITH GRANT OPTION;

USER: cleytonfs777
PASSWORD: *********
HOST: localhost
PORT: 3306


2. Logar com o usuário criado:

No terminal digite:

mysql -u nome_de_usuario -p


######################################################################################################################################
EXEMPLO DE BUSCAS NO sequelize

1. const produto = Produto.findAll() => Busca todos os registros da tabela

2. const produto = Produto.findByPk(2) => Busca o elemento com id = a 2 na tabela

3.
const produto = await Produto.findAll({
     where: {
         preco: 15
     }
 });

 => Retorna todos os produtos que tem o preço igual a 15

 PARA ALTERAR DADOS NA BASE

 const produto = await Produto.findByPk(2);

console.log(produto);

produto.preco = 400; ===> Basta acessar a chave do objeto e realizar a alteração
produto.save(); ===> realizadas todas as alterações rode o comando save

APAGANDO DESEJADOS
await Produto.destroy({
    where:{
        preco: 15
    }
})
======> Apaga todos os dados que correspondem a ação


######################################################################################################################################
